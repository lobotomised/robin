name: Test (PHP)
on: [push]
jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_DATABASE: test
      DB_USERNAME: root
      DB_PASSWORD: password
      BROADCAST_DRIVER: log
      DEBUGBAR_ENABLED: false
    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: '7.4'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo_mysql, bcmath, soap, intl
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-suggest --no-scripts
      - name: Setup Laravel
        run: |
          cp .env.example .env
          php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Install Frontend dependencies
        run: npm ci
      - name: Build Frontend
        run: npm run production
      - name: Migrate Database
        run: php artisan migrate
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
      - name: Run phpunit
        run: ./vendor/bin/phpunit --stop-on-error
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@master
        with:
          name: Logs
          path: ./storage/logs
  deploy:
    needs: tests
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: '7.4'
          extensions: curl, mbstring, zip, intl
      - name: Setup Laravel/envoy
        run: composer global require laravel/envoy
      - name: setup environment
        env:
          GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
        run: |
          eval $(ssh-agent -s)
          ssh-add <(echo "${{ secrets.SSH_PRIVATE_KEY }}")
          mkdir -p ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null\n\n" > ~/.ssh/config
          envoy run deploy --commit="$GITHUB_SHA"
